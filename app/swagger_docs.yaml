paths:
  /player:
    get:
      summary: Get player by id.
      produces:
        - application/json
      parameters:
        - in: query
          name: player_id
          description: player_id
          required: true
          example: 339
      responses:
        '200':
          description: OK

  /players/category:
    get:
      summary: Get details of players by category.
      produces:
        - application/json
      parameters:
        - in: query
          name: category
          description: category
          required: true
          example: batsman
      responses:
        '200':
          description: A Player object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

  /players/team:
    get:
      summary: Get details of players by the IPL team.
      produces:
        - application/json
      parameters:
        - in: query
          name: team
          description: team
          required: true
          example: rr
      responses:
        '200':
          description: A Player object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

  /players:
    get:
      summary: Get details of all the players.
      produces:
        - application/json
      responses:
        '200':
          description: A Player object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

  /create-league:
    post:
      summary: Create a league.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: postCreateLeagueInfo
          description: postCreateLeagueInfo body
          schema:
            $ref: '#/definitions/schemas/postCreateLeagueInfo'
      responses:
        '201':
          description: Successfully created the league.
        '409':
          description: League already exists.

  /join-league:
    post:
      summary: Join an existing league.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: postJoinLeagueInfo
          description: postJoinLeagueInfo body
          schema:
            $ref: '#/definitions/schemas/postJoinLeagueInfo'
      responses:
        '201':
          description: Successfully joined the league.
        '409':
          description: You've already joined the league.
        '422':
          description: Incorrect code.

  /delete-league:
    post:
      summary: Delete an existing league.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: postDeleteLeagueInfo
          description: postDeleteLeagueInfo body
          schema:
            $ref: '#/definitions/schemas/postDeleteLeagueInfo'
      responses:
        '201':
          description: Successfully deleted the league.
        '403':
          description: League can be deleted by its owner only.

  /user-team:
    get:
      summary: Get details of a particular team of a user.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: name
          description: team's name
          required: true
          example: My team
        - in: query
          name: user_name
          description: User's name
          required: true
          example: test1
      responses:
          '200':
            description: A Player object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Player'

  /create-team:
    post:
      summary: Create a team.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: postCreateTeamInfo
          description: postCreateTeamInfo body
          schema:
            $ref: '#/definitions/schemas/postCreateTeamInfo'
      responses:
        '201':
          description: Successfully created the team.
        '409':
          description: Team already exists.

components:
  schemas:
    Player:
      type: object
      properties:
        id:
          type: integer
          description: The player's ID.
        name:
          type: string
          description: The player's name.
        cap:
          type: string
          description: The player's cap.
        category:
          type: string
          description: The player's category.
        image_file:
          type: string
          description: The player's image.
        ipl_team:
          type: string
          description: The player's IPL team.

definitions:
  schemas:
    postPlayersInfo:
      type: object
      required:
        - postPlayersInfo
      properties:
        id:
          type: integer
          description: Id of the player
          example: 1
        name:
          type: string
          description: Name of the player
          example: Virat Kohli
        captain:
          type: boolean
          description: Is the current player also the captain
          example: true
        vice_captain:
          type: boolean
          description: Is the current player also the captain
          example: true

    postCreateLeagueInfo:
      type: object
      required:
        - postCreateLeagueInfo
      properties:
        name:
          type: string
          description: Name of the league
          example: My league
        owner_name:
          type: string
          description: Name of the user who's creating the league
          example: test1
        type:
          type: string
          description: Type of the league
          example: private

    postJoinLeagueInfo:
      type: object
      required:
        - postJoinLeagueInfo
      properties:
        team_name:
          type: string
          description: Name of the team that is joining the league
          example: user3 team
        code:
          type: string
          description: Unique code for joining the league
          example: C4795
        user_name:
          type: string
          description: Name of the user who's joining the league
          example: user1
        type:
          type: string
          description: Type of the league
          example: private
        league_name:
          type: string
          description: Name of the league
          example: My league

    postDeleteLeagueInfo:
      type: object
      required:
        - postDeleteLeagueInfo
      properties:
        league_name:
          type: string
          example: My league
        owner_name:
          type: string
          example: test1

    postCreateTeamInfo:
      type: object
      required:
        - postCreateTeamInfo
      properties:
        name:
          type: string
          description: Name of the team
          example: My team
        user_name:
          type: string
          description: Name of the user who's creating the team
          example: test1
        players:
          type: array
          description: Array of players
          items:
            $ref: '#/definitions/schemas/postPlayersInfo'
          example: [
        {"id": 244, "name": "VK", "captain": true, "vice_captain": false},
        {"id": 245, "name": "Faf", "captain": false, "vice_captain": true},
        {"id": 246, "name": "Siraj", "captain": false, "vice_captain": false}
    ]